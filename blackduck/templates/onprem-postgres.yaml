apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "bd.labelsWihtoutVersion" . | nindent 4 }}
    component: postgres
  name: {{ .Release.Name }}-blackduck-postgres
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-5432
    port: {{ .Values.postgres.port }}
    protocol: TCP
    targetPort: {{ .Values.postgres.port }}
  selector:
    {{- include "bd.selectorLabelsWihtoutVersion" . | nindent 4 }}
    component: postgres
  type: ClusterIP
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    {{- include "bd.labelsWihtoutVersion" . | nindent 4 }}
    component: postgres
  name: {{ .Release.Name }}-blackduck-postgres
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    {{- include "bd.selectorLabelsWihtoutVersion" . | nindent 4 }}
    component: postgres
  template:
    metadata:
      labels:
        {{- include "bd.selectorLabelsWihtoutVersion" . | nindent 8 }}
        component: postgres
      name: {{ .Release.Name }}-blackduck-postgres
    spec:
      containers:
      - env:
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "300"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 1024MB
        - name: POSTGRESQL_DATABASE
          value: blackduck
        - name: POSTGRESQL_USER
          value: blackduck
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
              name: {{ .Release.Name }}-blackduck-db-creds
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: HUB_POSTGRES_POSTGRES_PASSWORD_FILE
              name: {{ .Release.Name }}-blackduck-db-creds
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-blackduck-db-config
        image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - LD_LIBRARY_PATH=/opt/rh/rh-postgresql96/root/usr/lib64 /opt/rh/rh-postgresql96/root/usr/bin/pg_ctl
                -D /var/lib/pgsql/data/userdata -l logfile stop
        name: {{ .Release.Name }}-blackduck-postgres
        ports:
        - containerPort: {{ .Values.postgres.port }}
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/rh/rh-postgresql96/root/usr/bin/pg_isready -h localhost
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: {{ .Values.postgres.requestCpu }}
            memory: {{ .Values.postgres.requestMemory }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgres-data-volume
      dnsPolicy: ClusterFirst
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- include "bd.securityContext" . | nindent 6 }}
      terminationGracePeriodSeconds: 0
      volumes:
      {{- include "postgresPersistentStorage" . | nindent 6 }}

{{- define "postgresPersistentStorage" -}}
{{- if .Values.enablePersistentStorage -}}
- name: postgres-data-volume
  persistentVolumeClaim:
    claimName: {{ .Release.Name }}-blackduck-postgres
{{- else -}}
- emptyDir: {}
  name: postgres-data-volume
{{- end -}}
{{- end -}}