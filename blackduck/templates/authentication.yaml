apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "bd.labelsWihtoutVersion" . | nindent 4 }}
    component: authentication
  name: {{ .Release.Name }}-blackduck-authentication
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-8443
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    {{- include "bd.selectorLabelsWihtoutVersion" . | nindent 4 }}
    component: authentication
  type: ClusterIP
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    {{- include "bd.labels" . | nindent 4 }}
    component: authentication
  name: {{ .Release.Name }}-blackduck-authentication
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    {{- include "bd.selectorLabels" . | nindent 4 }}
    component: authentication
  template:
    metadata:
      labels:
        {{- include "bd.selectorLabels" . | nindent 8 }}
        component: authentication
      name: {{ .Release.Name }}-blackduck-authentication
    spec:
      containers:
      - env:
        - name: HUB_MAX_MEMORY
          value: 512m
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-blackduck-db-config
        - configMapRef:
            name: {{ .Release.Name }}-blackduck-config
        image: {{ .Values.registry }}/blackduck-authentication:{{ .Chart.AppVersion }}
        imagePullPolicy: Always
        {{- include "authenticationLivenessProbe" . | nindent 8 }}
        name: authentication
        ports:
        - containerPort: 8443
          protocol: TCP
        resources:
          limits:
            memory: {{ .Values.authentication.limitMemory }}
          requests:
            memory: {{ .Values.authentication.requestMemory }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/secrets/HUB_POSTGRES_ADMIN_PASSWORD_FILE
          name: db-passwords
          subPath: HUB_POSTGRES_ADMIN_PASSWORD_FILE
        - mountPath: /tmp/secrets/HUB_POSTGRES_USER_PASSWORD_FILE
          name: db-passwords
          subPath: HUB_POSTGRES_USER_PASSWORD_FILE
        - mountPath: /opt/blackduck/hub/hub-authentication/ldap
          name: dir-authentication
        - mountPath: /opt/blackduck/hub/hub-authentication/security
          name: dir-authentication-security
      dnsPolicy: ClusterFirst
      {{- include "bd.imagePullSecrets" . | nindent 6 }}
      {{- with .Values.authentication.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.authentication.affinity }}
      affinity:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.authentication.tolerations }}
      tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- include "bd.securityContext" . | nindent 6 }}
      terminationGracePeriodSeconds: 30
      volumes:
      {{- include "authenticationPersistentStorage" . | nindent 6 }}
      - name: db-passwords
        secret:
          defaultMode: 420
          items:
          - key: HUB_POSTGRES_ADMIN_PASSWORD_FILE
            mode: 420
            path: HUB_POSTGRES_ADMIN_PASSWORD_FILE
          - key: HUB_POSTGRES_USER_PASSWORD_FILE
            mode: 420
            path: HUB_POSTGRES_USER_PASSWORD_FILE
          secretName: {{ .Release.Name }}-blackduck-db-creds
      - emptyDir: {}
        name: dir-authentication-security

{{- define "authenticationLivenessProbe" -}}
{{- if .Values.enableLivenessProbe -}}
livenessProbe:
  exec:
    command:
    - /usr/local/bin/docker-healthcheck.sh
    - https://127.0.0.1:8443/api/health-checks/liveness
    - /opt/blackduck/hub/hub-authentication/security/root.crt
    - /opt/blackduck/hub/hub-authentication/security/blackduck_system.crt
    - /opt/blackduck/hub/hub-authentication/security/blackduck_system.key
  failureThreshold: 10
  initialDelaySeconds: 240
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 10
{{- end -}}
{{- end -}}

{{- define "authenticationPersistentStorage" -}}
{{- if .Values.enablePersistentStorage -}}
- name: dir-authentication
  persistentVolumeClaim:
    claimName: {{ .Release.Name }}-blackduck-authentication
{{- else -}}
- emptyDir: {}
  name: dir-authentication
{{- end -}}
{{- end -}}