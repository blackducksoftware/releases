apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "bd.labelsWihtoutVersion" . | nindent 4 }}
    component: registration
  name: {{ .Release.Name }}-blackduck-registration
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-8443
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    {{- include "bd.selectorLabelsWihtoutVersion" . | nindent 4 }}
    component: registration
  type: ClusterIP
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    {{- include "bd.labels" . | nindent 4 }}
    component: registration
  name: {{ .Release.Name }}-blackduck-registration
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    {{- include "bd.selectorLabels" . | nindent 4 }}
    component: registration
  template:
    metadata:
      labels:
        {{- include "bd.selectorLabels" . | nindent 8 }}
        component: registration
      name: {{ .Release.Name }}-blackduck-registration
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-blackduck-config
        image: {{ .Values.registry }}/blackduck-registration:{{ .Chart.AppVersion }}
        imagePullPolicy: Always
        {{- include "registrationLivenessProbe" . | nindent 8 }}
        name: registration
        ports:
        - containerPort: 8443
          protocol: TCP
        resources:
          limits:
            memory: {{ .Values.registration.limitMemory }}
          requests:
            cpu: {{ .Values.registration.requestCpu }}
            memory: {{ .Values.registration.requestMemory }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/blackduck/hub/hub-registration/config
          name: dir-registration
        - mountPath: /opt/blackduck/hub/hub-registration/security
          name: dir-registration-security
      dnsPolicy: ClusterFirst
      {{- with .Values.registration.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.registration.affinity }}
      affinity:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.registration.tolerations }}
      tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- with .Values.registration.securityContext }}
      securityContext:
      {{ toYaml . | indent 2 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
      {{- include "registrationPersistentStorage" . | nindent 6 }}
      - emptyDir: {}
        name: dir-registration-security

{{- define "registrationLivenessProbe" -}}
{{- if .Values.enableLivenessProbe -}}
livenessProbe:
  exec:
    command:
    - /usr/local/bin/docker-healthcheck.sh
    - https://localhost:8443/registration/health-checks/liveness
    - /opt/blackduck/hub/hub-registration/security/root.crt
    - /opt/blackduck/hub/hub-registration/security/blackduck_system.crt
    - /opt/blackduck/hub/hub-registration/security/blackduck_system.key
  failureThreshold: 10
  initialDelaySeconds: 240
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 10
{{- end -}}
{{- end -}}

{{- define "registrationPersistentStorage" -}}
{{- if .Values.enablePersistentStorage -}}
- name: dir-registration
  persistentVolumeClaim:
    claimName: {{ .Release.Name }}-blackduck-registration
{{- else -}}
- emptyDir: {}
  name: dir-registration
{{- end -}}
{{- end -}}