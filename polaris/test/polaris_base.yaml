apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: auth-server
  name: auth-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: configs-service
  name: configs-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: cos-server
  name: cos-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: desktop-metrics-service
  name: desktop-metrics-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: download-server
  name: download-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: issue-server
  name: issue-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-controller-service
  name: jobs-controller-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-service
  name: jobs-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: logs-service
  name: logs-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: pericles-swagger-ui
  name: pericles-swagger-ui
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: taxonomy-server
  name: taxonomy-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tds-code-analysis
  name: tds-code-analysis
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-deprecate-job
  name: tools-deprecate-job
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-service
  name: tools-service
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-sync-job
  name: tools-sync-job
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-command-handler
  name: triage-command-handler
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-query
  name: triage-query
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: vinyl-server
  name: vinyl-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-core
  name: web-core
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-help
  name: web-help
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: k8s-jobs-manager
  namespace: ${NAMESPACE}
rules:
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: leaderElector
  name: leaderElector
  namespace: ${NAMESPACE}
rules:
- apiGroups:
  - ""
  - extensions
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  - extensions
  resources:
  - namespaces
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-jobs-manager
  namespace: ${NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-jobs-manager
subjects:
- kind: ServiceAccount
  name: jobs-service
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: leaderElector
  name: leaderElector
  namespace: ${NAMESPACE}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leaderElector
subjects:
- kind: ServiceAccount
  name: triage-query
  namespace: ${NAMESPACE}
- kind: ServiceAccount
  name: triage-command-handler
  namespace: ${NAMESPACE}
- kind: ServiceAccount
  name: tds-code-analysis
  namespace: ${NAMESPACE}
- kind: ServiceAccount
  name: tds-fuzz
  namespace: default
- kind: ServiceAccount
  name: tds-csv
  namespace: default
- kind: ServiceAccount
  name: tds-sca
  namespace: default
- kind: ServiceAccount
  name: tds-seeker
  namespace: default
- kind: ServiceAccount
  name: issue-server
  namespace: ${NAMESPACE}
- kind: ServiceAccount
  name: cos-server
  namespace: ${NAMESPACE}
- kind: ServiceAccount
  name: auth-server
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: auth-server
  name: auth-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: auth-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: configs-service
  name: configs-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: configs-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: cos-server
  name: cos-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: cos-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: desktop-metrics-service
  name: desktop-metrics-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: desktop-metrics-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: download-server
  name: download-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: download-server
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    service: download-server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: issue-server
  name: issue-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: issue-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-controller-service
  name: jobs-controller-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: jobs-controller-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-service
  name: jobs-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: jobs-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: logs-service
  name: logs-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: logs-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: pericles-swagger-ui
  name: pericles-swagger-ui
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    service: pericles-swagger-ui
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: taxonomy-server
  name: taxonomy-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: taxonomy-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tds-code-analysis
  name: tds-code-analysis
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: tds-code-analysis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-service
  name: tools-service
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: tools-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-command-handler
  name: triage-command-handler
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: triage-command-handler
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-query
  name: triage-query
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: triage-query
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: vinyl-server
  name: vinyl-server
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: admin
    port: 8081
    targetPort: 8081
  selector:
    service: vinyl-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-core
  name: web-core
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: web-core
---
apiVersion: v1
kind: Service
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-help
  name: web-help
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    service: web-help
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: auth-server
  name: auth-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: auth-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: auth-server
      name: auth-server
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: auth-server
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: auth-server
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-auth-server
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_server_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_server_cert
        - name: SMTP_HOST
          valueFrom:
            configMapKeyRef:
              key: host
              name: smtp
        - name: SMTP_PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: smtp
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: passwd
              name: smtp
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: smtp
        image: gcr.io/snps-swip-staging/swip_auth-server:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: auth-server
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-server-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-server-cert
          readOnly: true
      - args:
        - --election=auth-server
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: auth-server
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-server-key
        secret:
          items:
          - key: tls.key
            path: vault_server_key
          secretName: auth-server-tls-certificate
      - name: vault-server-cert
        secret:
          items:
          - key: tls.crt
            path: vault_server_cert
          secretName: auth-server-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: configs-service
  name: configs-service
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: configs-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: configs-service
      name: configs-service
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: configs-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: configs-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-configs-service
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        image: gcr.io/snps-swip-staging/swip_configs-service:1.0.691
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: configs-service
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: configs-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: cos-server
  name: cos-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: cos-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: cos-server
      name: cos-server
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: cos-server
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: cos-server
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-cos-server
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_cos-server:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: cos-server
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      - args:
        - --election=cos-server
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: cos-server
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: desktop-metrics-service
  name: desktop-metrics-service
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: desktop-metrics-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: desktop-metrics-service
      name: desktop-metrics-service
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: desktop-metrics-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: desktop-metrics-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        image: gcr.io/snps-swip-staging/swip_desktop-metrics-service:1.0.306
        imagePullPolicy: IfNotPresent
        name: desktop-metrics-service
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: desktop-metrics-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: download-server
  name: download-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: download-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: download-server
    spec:
      containers:
      - args:
        - server
        - /opt/data
        env:
        - name: MINIO_BROWSER
          value: "off"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-tools-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-tools-minio
        image: gcr.io/snps-swip-staging/public/minio/minio:RELEASE.2019-02-14T00-21-45Z
        name: download-server
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: 750m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /opt/data
          name: download-server
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      volumes:
      - name: download-server
        persistentVolumeClaim:
          claimName: download-server-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: issue-server
  name: issue-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: issue-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: issue-server
      name: issue-server
    spec:
      containers:
      - env:
        - name: TDS_LOOKUP
          value: 10b78709-8156-447e-ac28-8669e461f0c9:code-analysis:Coverity
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: issue-server
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: issue-server
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-issue-server
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_issue-server:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: issue-server
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      - args:
        - --election=issue-server
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: issue-server
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-controller-service
  name: jobs-controller-service
  namespace: ${NAMESPACE}
spec:
  replicas: null
  selector:
    matchLabels:
      service: jobs-controller-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: jobs-controller-service
      name: jobs-controller-service
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: jobs-controller-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: jobs-controller-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-jobs-controller-service
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: SWIP_UPLOAD_SERVER_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-upload-server
        - name: SWIP_UPLOAD_SERVER_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-upload-server
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: CONFIG
          value: controller-config-k8s.yaml
        - name: POSTGRES_DB
          value: jobs-service
        image: gcr.io/snps-swip-staging/swip_jobs-service:1.7.811
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: jobs-controller-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: jobs-controller-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-service
  name: jobs-service
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: jobs-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: jobs-service
      name: jobs-service
    spec:
      containers:
      - env:
        - name: SWIP_UPLOAD_DESCRIPTOR_EXPIRATION_PERIOD
          value: 3h
        - name: CLI_FILE_UPLOAD_SIZE_LIMIT
          value: "10737418240"
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: jobs-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: jobs-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-jobs-service
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: SWIP_UPLOAD_SERVER_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-upload-server
        - name: SWIP_UPLOAD_SERVER_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-upload-server
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: NOMAD_ADDR
          value: https://nomad:4646
        - name: NOMAD_CACERT
          value: /etc/nomad/tls/ca.pem
        - name: NOMAD_CLIENT_CERT
          value: /etc/nomad/tls/nomad.pem
        - name: NOMAD_CLIENT_KEY
          value: /etc/nomad/tls/nomad-key.pem
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: INGRESS_NAMESPACE
          value: kube-system
        - name: INGRESS_SERVICE
          value: polaris-infra-nginx-internal-ingress-controller
        - name: ANALYSIS_TYPE
          value: k8s
        - name: CONFIG
          value: config-k8s.yaml
        - name: POSTGRES_DB
          value: jobs-service
        image: gcr.io/snps-swip-staging/swip_jobs-service:1.7.811
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: jobs-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
        - mountPath: /etc/nomad/tls
          name: nomad-tls
          readOnly: true
        - mountPath: /opt/jobs-server/license
          name: coverity-license
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: jobs-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
      - name: nomad-tls
        secret:
          secretName: nomad
      - name: coverity-license
        secret:
          items:
          - key: license
            path: cov_analysis/license.dat
          secretName: coverity-license
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: logs-service
  name: logs-service
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: logs-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: logs-service
      name: logs-service
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: logs-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: logs-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-logs-service
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_logs-service:1.5.2347
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: logs-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: logs-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: pericles-swagger-ui
  name: pericles-swagger-ui
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: pericles-swagger-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: pericles-swagger-ui
    spec:
      containers:
      - image: gcr.io/snps-swip-staging/pericles-swagger-ui:0.0.18
        imagePullPolicy: IfNotPresent
        name: pericles-swagger-ui
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: pericles-swagger-ui
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: taxonomy-server
  name: taxonomy-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: taxonomy-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: taxonomy-server
      name: taxonomy-server
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: taxonomy-server
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: taxonomy-server
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-taxonomy-server
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: APPLICATION_INSIGHTS_IKEY
          value: placeholder
        image: gcr.io/snps-swip-staging/swip_taxonomy-server:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: taxonomy-server
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: taxonomy-server
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tds-code-analysis
  name: tds-code-analysis
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: tds-code-analysis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: tds-code-analysis
      name: tds-code-analysis
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: tds-code-analysis
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: tds-code-analysis
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-tds-code-analysis
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_tds-code-analysis:1.8.77
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: tds-code-analysis
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 3Gi
          requests:
            cpu: 500m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      - args:
        - --election=tds-code-analysis
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: tds-code-analysis
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: tds-code-analysis-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: tds-code-analysis-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-service
  name: tools-service
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: tools-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: tools-service
      name: tools-service
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: tools-service
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: tools-service
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-tools-service
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-tools-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-tools-minio
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_tools-service:1.5.2428
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: tools-service
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: tools-service
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-command-handler
  name: triage-command-handler
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: triage-command-handler
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: triage-command-handler
      name: triage-command-handler
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: triage-command-handler
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: triage-command-handler
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-triage-command-handler
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        image: gcr.io/snps-swip-staging/swip_triage-command-handler:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: triage-command-handler
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      - args:
        - --election=triage-command-handler
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: triage-command-handler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-query
  name: triage-query
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: triage-query
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: triage-query
      name: triage-query
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: triage-query
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: triage-query
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-triage-query
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: EVENT_STORE_ADDR
          value: eventstore
        - name: EVENT_STORE_USERNAME
          value: admin
        - name: EVENT_STORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_WRITER_USERNAME
          value: writer
        - name: EVENT_STORE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-writer-creds
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_READER_USERNAME
          value: reader
        - name: EVENT_STORE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-reader-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        - name: POSTGRES_HOST
          value: ${POSTGRES_HOST}
        - name: POSTGRES_PORT
          value: ${POSTGRES_PORT}
        - name: CLOUDSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql-config
        - name: CLOUDSQL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_USER
              name: postgresql-config
        image: gcr.io/snps-swip-staging/swip_triage-query:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: triage-query
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      - args:
        - --election=triage-query
        - --election-namespace=default
        - --http=0.0.0.0:4040
        image: k8s.gcr.io/leader-elector:0.5
        imagePullPolicy: Always
        name: leader-election
        ports:
        - containerPort: 4040
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 50Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: triage-query
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: vinyl-server
  name: vinyl-server
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: vinyl-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: vinyl-server
      name: vinyl-server
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: vinyl-server
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: vinyl-server
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-vinyl-server
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_client_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_client_cert
        image: gcr.io/snps-swip-staging/swip_vinyl-server:1.6.1863
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /version
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 30
        name: vinyl-server
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        resources:
          limits:
            cpu: 750m
            memory: 1300Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-client-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-client-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      serviceAccount: vinyl-server
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-client-key
        secret:
          items:
          - key: tls.key
            path: vault_client_key
          secretName: auth-client-tls-certificate
      - name: vault-client-cert
        secret:
          items:
          - key: tls.crt
            path: vault_client_cert
          secretName: auth-client-tls-certificate
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-core
  name: web-core
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: web-core
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: web-core
      name: web-core
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: web-core
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: web-core
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: JAEGER_SERVICE_NAME
          value: default-web-core
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: const
        - name: JAEGER_SAMPLER_PARAM
          value: "1"
        - name: APP_URL
          value: ${POLARIS_ROOT_DOMAIN}
        - name: API_NAMESPACE
          value: common/v0
        - name: API_ORIGIN
          value: /api
        - name: AUTH_ORIGIN
          value: /api/auth
        - name: CSRF_TOKEN
          value: csrf_token
        - name: ACCESS_TOKEN_EXP_SEC
          value: access_token_exp_sec
        - name: LOG_ORIGIN
          value: /api/logs/logging/web-core
        - name: REPORTING_URL
          value: https://${POLARIS_ROOT_DOMAIN}/reporting
        image: gcr.io/snps-swip-staging/web-core:1.7.875
        imagePullPolicy: IfNotPresent
        name: web-core
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
      serviceAccount: web-core
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-help
  name: web-help
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: web-help
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: web-help
      name: web-help
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: web-help
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: web-help
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: APP_URL
          value: ${POLARIS_ROOT_DOMAIN}
        - name: APP_PATH
          value: help
        - name: CSRF_TOKEN
          value: csrf_token
        - name: ACCESS_TOKEN_EXP_SEC
          value: access_token_exp_sec
        - name: LOG_ORIGIN
          value: /api/logs/logging/web-help
        image: gcr.io/snps-swip-staging/web-help:1.9.108
        imagePullPolicy: IfNotPresent
        name: web-help
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
      serviceAccount: web-help
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: auth-server
  name: auth-server
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: auth-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: configs-service
  name: configs-service
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: configs-service
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: cos-server
  name: cos-server
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: cos-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: desktop-metrics-service
  name: desktop-metrics-service
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: desktop-metrics-service
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: issue-server
  name: issue-server
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: issue-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: jobs-service
  name: jobs-service
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: jobs-service
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: logs-service
  name: logs-service
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: logs-service
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: taxonomy-server
  name: taxonomy-server
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: taxonomy-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tds-code-analysis
  name: tds-code-analysis
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: tds-code-analysis
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-deprecate-job
  name: tools-deprecate-job
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: tools-deprecate-job
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-service
  name: tools-service
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: tools-service
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-command-handler
  name: triage-command-handler
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: triage-command-handler
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: triage-query
  name: triage-query
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: triage-query
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: vinyl-server
  name: vinyl-server
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: vinyl-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: web-core
  name: web-core
  namespace: ${NAMESPACE}
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: memory
      targetAverageUtilization: 75
    type: Resource
  - resource:
      name: cpu
      targetAverageUtilization: 75
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: web-core
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: es-migrator
  name: es-migrator
  namespace: ${NAMESPACE}
spec:
  template:
    chart: swip
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    metadata:
      labels: null
      name: es-migrator
    service: es-migrator
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL
          value: INFO
        - name: ESJC_LOGGING_LEVEL
          value: INFO
        - name: SWIP_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: SWIP_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: SWIP_SERVICE_NAME
          value: es-migrator
        - name: NAMESPACE
          value: default
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: es-migrator
        - name: KUBERNETES_NAMESPACE
          value: default
        - name: EVENT_STORE_ADDR
          value: eventstore.default.svc.cluster.local
        - name: EVENT_STORE_ADMIN_USERNAME
          value: admin
        - name: EVENT_STORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: swip-eventstore-admin-creds
        - name: SWIP_VAULT_ADDRESS
          value: https://polaris-db-vault:8200
        - name: VAULT_CACERT
          value: /mnt/vault/ca/vault_cacrt
        - name: VAULT_CLIENT_KEY
          value: /mnt/vault/key/vault_server_key
        - name: VAULT_CLIENT_CERT
          value: /mnt/vault/cert/vault_server_cert
        image: gcr.io/snps-swip-staging/swip_es-migrator:1.5.836
        imagePullPolicy: IfNotPresent
        name: es-migrator
        volumeMounts:
        - mountPath: /mnt/vault/ca
          name: vault-cacert
          readOnly: true
        - mountPath: /mnt/vault/key
          name: vault-server-key
          readOnly: true
        - mountPath: /mnt/vault/cert
          name: vault-server-cert
          readOnly: true
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      volumes:
      - name: vault-cacert
        secret:
          items:
          - key: tls.crt
            path: vault_cacrt
          secretName: vault-ca-certificate
      - name: vault-server-key
        secret:
          items:
          - key: tls.key
            path: vault_server_key
          secretName: auth-server-tls-certificate
      - name: vault-server-cert
        secret:
          items:
          - key: tls.crt
            path: vault_server_cert
          secretName: auth-server-tls-certificate
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-install
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-deprecate-job
  name: tools-deprecate-job
  namespace: ${NAMESPACE}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: tools-deprecate-job
    spec:
      containers:
      - env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-tools-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-tools-minio
        - name: ENVIRONMENT
          value: ${ENVIRONMENT_NAME}
        - name: OPERATION_TYPE
          value: deprecate
        - name: DEPLOYMENT_PLATFORM
          value: on-prem
        image: gcr.io/snps-swip-staging/swip_tools_sync:1.0.519
        imagePullPolicy: IfNotPresent
        name: tools-deprecate-job
        volumeMounts:
        - mountPath: /etc/credentials
          name: tools-store-sync
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Never
      volumes:
      - name: tools-store-sync
        secret:
          secretName: tools-store-sync
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-install
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: tools-sync-job
  name: tools-sync-job
  namespace: ${NAMESPACE}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        chart: swip
        chartVersion: 0.0.4844
        component: swip
        componentVersion: 0.0.4844
        environment: ${ENVIRONMENT_NAME}
        service: tools-sync-job
    spec:
      containers:
      - env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key
              name: swip-tools-minio
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: swip-tools-minio
        - name: ENVIRONMENT
          value: ${ENVIRONMENT_NAME}
        - name: OPERATION_TYPE
          value: sync
        - name: DEPLOYMENT_PLATFORM
          value: on-prem
        image: gcr.io/snps-swip-staging/swip_tools_sync:1.0.519
        imagePullPolicy: IfNotPresent
        name: tools-sync-job
        volumeMounts:
        - mountPath: /etc/credentials
          name: tools-store-sync
        - mountPath: /opt/data
          name: download-server
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}
      restartPolicy: Never
      volumes:
      - name: tools-store-sync
        secret:
          secretName: tools-store-sync
      - name: download-server
        persistentVolumeClaim:
          claimName: download-server-pv-claim
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/hsts: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: swip-ingress
  name: swip-ingress
  namespace: ${NAMESPACE}
spec:
  rules:
  - host: ${POLARIS_ROOT_DOMAIN}
    http:
      paths:
      - backend:
          serviceName: auth-server
          servicePort: 8080
        path: /api/auth/v0(/|$)(.*)
      - backend:
          serviceName: jobs-service
          servicePort: 8080
        path: /api/jobs/v0(/|$)(.*)
      - backend:
          serviceName: logs-service
          servicePort: 8080
        path: /api/logs/v0(/|$)(.*)
      - backend:
          serviceName: tools-service
          servicePort: 8080
        path: /api/tools/v0(/|$)(.*)
      - backend:
          serviceName: configs-service
          servicePort: 8080
        path: /api/checks/v0(/|$)(.*)
      - backend:
          serviceName: configs-service
          servicePort: 8080
        path: /api/configs/v0(/|$)(.*)
      - backend:
          serviceName: pericles-swagger-ui
          servicePort: 8080
        path: /api-docs/()(.*)
      - backend:
          serviceName: cos-server
          servicePort: 8080
        path: /api/common(/|$)(.*)
      - backend:
          serviceName: tds-code-analysis
          servicePort: 8080
        path: /api/code-analysis(/|$)(.*)
      - backend:
          serviceName: issue-server
          servicePort: 8080
        path: /api/query(/|$)(.*)
      - backend:
          serviceName: issue-server
          servicePort: 8080
        path: /api/issues(/|$)(.*)
      - backend:
          serviceName: taxonomy-server
          servicePort: 8080
        path: /api/taxonomy(/|$)(.*)
      - backend:
          serviceName: triage-command-handler
          servicePort: 8080
        path: /api/triage-command(/|$)(.*)
      - backend:
          serviceName: triage-query
          servicePort: 8080
        path: /api/triage-query(/|$)(.*)
      - backend:
          serviceName: auth-server
          servicePort: 8080
        path: /api/auth(/|$)(.*)
      - backend:
          serviceName: jobs-service
          servicePort: 8080
        path: /api/jobs(/|$)(.*)
      - backend:
          serviceName: logs-service
          servicePort: 8080
        path: /api/logs(/|$)(.*)
      - backend:
          serviceName: tools-service
          servicePort: 8080
        path: /api/tools(/|$)(.*)
      - backend:
          serviceName: configs-service
          servicePort: 8080
        path: /api/checks(/|$)(.*)
      - backend:
          serviceName: configs-service
          servicePort: 8080
        path: /api/configs(/|$)(.*)
      - backend:
          serviceName: desktop-metrics-service
          servicePort: 8080
        path: /api/dms(/|$)(.*)
      - backend:
          serviceName: desktop-metrics-service
          servicePort: 8080
        path: /api/dms/v0(/|$)(.*)
      - backend:
          serviceName: upload-server
          servicePort: 9000
        path: /upload(/|$)(.*)
      - backend:
          serviceName: download-server
          servicePort: 9000
        path: /download(/|$)(.*)
      - backend:
          serviceName: vinyl-server
          servicePort: 8080
        path: /api/vinyl(/|$)(.*)
      - backend:
          serviceName: web-core
          servicePort: 8080
        path: /()(.*)
      - backend:
          serviceName: rp-frontend
          servicePort: 80
        path: /reporting(/|$)(.*)
      - backend:
          serviceName: rp-tools-portfolio-service
          servicePort: 60281
        path: /reporting/tps(/|$)(.*)
      - backend:
          serviceName: rp-issue-manager
          servicePort: 6888
        path: /reporting/im(/|$)(.*)
      - backend:
          serviceName: rp-portfolio-service
          servicePort: 60289
        path: /reporting/rpps(/|$)(.*)
      - backend:
          serviceName: rp-report-service
          servicePort: 7979
        path: /reporting/rs(/|$)(.*)
      - backend:
          serviceName: rp-swagger-doc
          servicePort: 8765
        path: /reporting/swagger(/|$)(.*)
      - backend:
          serviceName: rp-polaris-agent-service
          servicePort: 7788
        path: /reporting/pas(/|$)(.*)
      - backend:
          serviceName: web-help
          servicePort: 8080
        path: /help(/|$)(.*)
  tls:
  - hosts:
    - ${POLARIS_ROOT_DOMAIN}
    secretName: swip-ingress-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    chartVersion: 0.0.4844
    component: swip
    componentVersion: 0.0.4844
    environment: ${ENVIRONMENT_NAME}
    service: download-server
  name: download-server-pv-claim
  namespace: ${NAMESPACE}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
