---
# Source: swip/templates/organization-provision-job.yaml

apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "organization-provision-job"
  labels:  
  environment: "${ENVIRONMENT_NAME}"
  service: "organization-provision-job"
  component: "swip"
  componentVersion: "0.0.5974"
  chart: "swip"
  chartVersion: "0.0.5974"
spec:
  template:
    metadata:
      name: "organization-provision-job"
      labels:        
        environment: "${ENVIRONMENT_NAME}"
        service: "organization-provision-job"
        component: "swip"
        componentVersion: "0.0.5974"
        chart: "swip"
        chartVersion: "0.0.5974"
      annotations:
        "helm.sh/hook": post-install, post-upgrade
        "helm.sh/hook-weight": "100"
        "helm.sh/hook-delete-policy": hook-succeeded
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
      restartPolicy: "OnFailure"
      containers:
      - name: "organization-provision-job"
        image: "gcr.io/snps-swip-staging/swip_organization-provision-job:1.7.84"
        imagePullPolicy: "IfNotPresent"
        env:        
        - name: LOGGING_LEVEL
          value: "INFO"
        - name: ESJC_LOGGING_LEVEL
          value: "INFO"
        - name: SWIP_ENVIRONMENT_NAME
          value: "${ENVIRONMENT_NAME}"
        - name: SWIP_ROOT_DOMAIN
          value: "${POLARIS_ROOT_DOMAIN}"
        - name: SWIP_SERVICE_NAME
          value: "organization-provision-job"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POLARIS_ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: POLARIS_ROOT_DOMAIN
          value: ${POLARIS_ROOT_DOMAIN}
        - name: POLARIS_SERVICE_NAME
          value: organization-provision-job
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "SWIP_VAULT_ADDRESS"
          value: "https://polaris-db-vault:8200"
        - name: "VAULT_CACERT"
          value: "/var/run/secrets/vault/client/ca.crt"
        - name: "VAULT_CLIENT_KEY"
          value: "/var/run/secrets/vault/client/tls.key"
        - name: "VAULT_CLIENT_CERT"
          value: "/var/run/secrets/vault/client/tls.crt"
        - name: "ORGANIZATION_PROVISION_AUTH_SERVICE_URL"
          value: "http://auth-server"
        - name: "ORGANIZATION_PROVISION_TOOLS_SERVICE_URL"
          value: "http://tools-service"
        - name: "REQUIRED_SERVICE_RETRY_SECONDS"
          value: "5"
        - name: "REQUIRED_SERVICE_RETRY_STOP_MINUTES"
          value: "20"
        - name: "ORGANIZATION_PROVISION_API_TOKEN_VAULT_PATH"
          value: "secret/data/auth/public/daemon@api_token"
        - name: "ORGANIZATION_PROVISION_LICENSE_ISSUED_BY"
          value: "Synopsys, Inc"
        - name: "ORGANIZATION_PROVISION_ORGANIZATION_DESCRIPTION"
          value: "${ORG_DESCRIPTION}"
        - name: "ORGANIZATION_PROVISION_ORGANIZATION_NAME"
          value: "${ORG_NAME}"
        - name: "ORGANIZATION_PROVISION_ADMIN_NAME"
          value: "${ADMIN_NAME}"
        - name: "ORGANIZATION_PROVISION_ADMIN_USERNAME"
          value: "${ADMIN_USERNAME}"
        - name: "ORGANIZATION_PROVISION_ADMIN_EMAIL"
          value: "${ADMIN_EMAIL}"
        - name: "ORGANIZATION_PROVISION_LICENSE_SEAT_COUNT"
          value: "${SEAT_COUNT}"
        - name: "ORGANIZATION_PROVISION_LICENSE_TYPE"
          value: "${TYPE}"
        - name: "ORGANIZATION_PROVISION_RESULTS_START_DATE"
          value: "${RESULTS_START_DATE}"
        - name: "ORGANIZATION_PROVISION_RESULTS_END_DATE"
          value: "${RESULTS_END_DATE}"
        - name: "ORGANIZATION_PROVISION_RETENTION_START_DATE"
          value: "${RETENTION_START_DATE}"
        - name: "ORGANIZATION_PROVISION_RETENTION_END_DATE"
          value: "${RETENTION_END_DATE}"
        - name: "ORGANIZATION_PROVISION_COVERITY_LICENSE"
          valueFrom:
            secretKeyRef:
              name: "coverity-license"
              key: "license"
        volumeMounts:        
        - mountPath: "/var/run/secrets/vault/client"
          name: "vault-client"
          readOnly: true
        resources:          
          {}
      volumes:      
      - name: "vault-client"
        secret:
          secretName: "auth-client-tls-certificate"      
      imagePullSecrets:
      - name: ${IMAGE_PULL_SECRETS}

